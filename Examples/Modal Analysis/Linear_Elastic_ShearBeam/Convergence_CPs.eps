%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: 7cd90d84ee2b46c9a90939ca6cc32069.dvi
%%CreationDate: Wed Oct 09 13:06:29 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 360
%%DocumentFonts: CMR10 CMSY10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\IBOUCK~1\AppData\Local\Temp\tmputa12ai9\tmp.ps
%+ C:\Users\ibouckaert\.matplotlib\tex.cache\7c\d9\7cd90d84ee2b46c9a90939ca6cc32069.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.10.09:1506
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 67 /C put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2DF97AEE0D09A156F4D61E
BFAD51DE7C311530920A93FD6EC3E470330AAE465EC3B744AEE2F5C10C12018C
E74015A5F973442115232482E21867B22A7AC4887D3E82F32C16064A2684EC7E
78E1AB35E2D841DC068CAC8FF7F05E627E42F2B701DF842CD80161A57CC3A2F4
7F997C4288AA1C8CDA5E3C6F89AD4B0309808BF57FD24038848D6697C68C5194
87D2C0D18EFC778584AF39D2814139E38C4BCAE9E1CD3174CFDDA0974B9FAD12
5502A33F3E65A94AC101903963A84EBD442A298F148A17EF4A4CD214B123B211
2202761FBF8ED90C36858E64403E0894616BBD9691E64833B16F5BD6E4B65B1B
D866436AA7E2D2C09DDEBD95B89FEE748C24A37E511A043B25D4477B713B015A
306F1EEFB6694AA32B27B7064EAAE94F0FEC6437B6B4E988A1B47C8ACA432275
739721976F0D03471086549519212098D94298EEBD3EED8A0E8892BB78D04AE4
133AFFD328AAB9F195A0F1C4E9BC10E3F6634141A65185648E67F28A86E8AC68
9C1918C03E8A3F98100A686ADB740C45D0CB167BEB8857F79C1F86352211F2BB
BF036255E83C9F847EC2351997F4F85D0762327E1353649873CACAF6F08C1C16
A1ECDFF5481C4087071ED8B4A37AF43D93E683B4789779B57089C1381D77CBA1
CD6C20CDDD9A770AD2A21749E2DFF78190DF545E359F2932DB594EC8835F2CCE
12E3D94AFBD4A2E4FED99494A4B598239F7747461115EB490BFB9C965FC2C064
B37316889A602D35C300EA6F0F819A57FB95212220A4F01B1BB051D5C727C72C
EE9E420553523A8B2E7812E325949CFDAE10DC9B0E91F8DBC2F6E5E5A1D77AE9
CD36B336015173A554034710B4A9DA4C7B3F15FECBC036634F64B3838C0841BA
8EEF27FDA86CF66E032F1B0D49461134495020182A77418DF5E34390FEBD9948
A2A9CE91C762FD7F6294CB60E43DA70FE867F186628340CFA5E7F8BDC7A641B8
092DF85006E25BA750372C0DC482640F980319D645594A9BAB21E9EA9B4CE636
22957928828ADA592A6F36610CF1C2FBE6C0D410CF36B6EDE8ABE9CC72E1797C
AF289875E64006A9CFACEB2A792FD0382BAF17AA04B8051908A29BB161EF7DB8
8DA4B04E97B19456E363D50A6E4274EDECFC2ADA9749AD1760964ADA8436739B
E6B8EA8FE7F664C583B5BC67E5B039CDCAC10A2A29E3602B06CB44207240DBBC
EB78B71F64D0CB206DE5ADB1D50119B2347ED059BFB423242BF05BB801ABF5DB
8BB1E1A7A36A79DF658AC6B29DFE3B9156A61F9BFCD1C4FF3CE48596C5DE5E5E
938F6D907EE76FA84E8850C8DA04B570FDE7E6248B6EDC7D53FF3DA260A34768
2E02B4560BE53C5516EABC83A0286D9D00140883F2145FE332F659D0D19E4A6F
5D17B4FBC9AA65EA4FC14168FA9B82CDFADB063B1C0DF1F40697FB56247465D0
C8760A9656E044AC739177EB13E1269E6E9AC2DB52CE3BDA2C8CD8F336EB1012
3D2E5B0655566BE5587C3D08EB14B811D39B31218F0E68D0FFC9CCB5F603239C
9DA0EE060040831A4C4DBCB62BEC45BD7AF059BBAE5E45C0FC93D273C16FDAA5
04C31E0A4414DA781D4972FDEC9C5AFE9EC5BE9D6853770F1DF8FCD70DEE0E70
D36DC54C4CC3D0954E2ED0CC15FD8F2E0D2619B8C1EC00A49F1F81C3C1C8CB6A
3F784EDE6256E409533BF93AA84D270ECA5F02347835DFE50FE3765AE00A4821
305C7A09C96D206D6E71084AD5229FCBF7E3030ECBBC0BF0A4DD2CB038B88436
85BFEAE15514C34154E0057A8D4EE1C5DB70F4B17B4DE35C678F54658CAB1C85
F8CC75FE1811BD7012183A1C7F50AB4A4949350BEE1AEAD16B02E3866683696D
3E2E001F88B4A2470380EA3BA4600462D262F0943A40CA0D4430E860511F8186
4A34EF819F0A9796DFC3EC9FC4CA74539970EFB2D13C85DDF2B0F7EEE692C940
5449A4AE5CF8006B8124A80BBF26C766F3F1587F476AD6E7850D0EC02AA6D2C5
EDCE3E81E5BE066688E7FF5154E359398F2D2720563D6AD56FF1D81372EF4E55
FB4DD374F5B4D89E34A94F46DF05AC91D813363ECBB7CDE475BB6C77CA2BDC2C
C8A0B7F38655D2646D2C711D5CC5C249F1A8124A0FB158ECABFAFB204291B000
3D65261B3FD355B1DE1D32145D39243D0590A90F1C4EC2CD62096A39E6210AC2
5E07669C5BB03EFD1554FB810CF9C3A512859F4779735070276E46A4320143FB
D4A80630647E2EF877DE4BE964AB5C97CB8333071F0DEA693AD05F6FCA2EAEDC
C18C8085403CD5A7478D7827FE6F4D911B87A6E3C51F83A64D7B376266C585B6
F33A4D742BBCEFC11F097D3CECA07ADD89D2EBA4FBDB82C060B037A503671B02
BA487CF6B503A793CFB5D7EA8D0DDAD3E1083B48937DF74507591F850F2DD0C8
1F51B0C59C9F6CC71BAEF5A79D29C5A8663F62702F332CB1CF9FCE7552546BC4
FD002594B973CA453340C9E6BF0984634A9DCB0567116FD22EBD1D8B745DA3E3
86BBD0254D4C040E889BBCE899347659CDD152A758D6237E52CC34989EB6EEFC
121F01818FD4EA8182D993627B44B505ED2B999CB46D339DDD22319BC0732326
C35A3B13C9BB6C89BFACDF4042ADED537BCF304A018D7E776B528331B528845F
95D9F420E31B91E481FB896B961D3A561A57D2190AD2682D9EBD0AF9225F589F
9D7AA0B7C17AEDAED8A2EF399304D8183AE811DA61DC8C4CD2684CB9CD1CEE0F
BECE655F3DF8D3666728FD0CDF7BF8C6BAFEFADFB285A853DE819006D1FF3412
D504943284C1658B6FF324C0F1F75421B6DE423A1EF22B2D0A83C48263F887FD
33BF25FB2AC18758359E92F6E5F49819178A985CF7B2A01D139AA6085EEEB0D9
5252F4783190A77C403F04951AF80069F20D7520CAA4594A68B2007D51B3B017
C0C2BACDA9B6DEA40FECA1476A77A097279320FE11B2A16ADF4779A03E247B70
D47FBDF082C0A57A2777B0CBA5B8921ED3BC8A4494EA45E98F210DEE6F48837B
964B85DA617F7DB374CA9DE31A8806C8EFAC8D8D18491484EB38B8A61FF44991
37349539B5D7B2E5A5CDA78622F88977F16788A4C713C133EE583CABE47A4B7F
484A55FFA53811C74111E00FFBFB51D7299A4E03AEF9E9E7F0DAF3C5C03EE114
6A1F89B91FBB757ADFBF533BAC6BA3886488623E012588E57B82306412CEF092
6A907166884FE5B3AE1A4C98D6970A0B316C8D07F3BA90A03364DC61AF2207CF
374F0572B55E545092F7F87395F5F563FE3AB81DE85603F33E81F5E97FD0A5F4
5ACC152C908AFF5683EBDF8DA7470D377363ED38A9355D4288C99AEB281B0FBC
FF508A6FF7FD6FB626A6B522BBE5D26E24FD91E2DB83A4B096A3FC282020017F
72B573E82C3E2066C1993058482A9A71594E8D5C7241D87DB648ADB4D1189B6B
EF39F10FB6E565F7C20E60DAB564B78493298FB3B1EB9C376E3E74D48703E38D
06F6CD077F1B3BB3CC56059E5B2E12F2191F4BC3B436252971DB2C5298720990
4A5F0DD58A088CA740A375446BE86D03466500522E7C0F5EEE3233299E5C78A5
55CAFE882D8E9B83BC3D429B41A9D6A19518892894A263084FD1D5882D026967
4D078AA7B9FBBFF4B510E2B1BF1A80304683C1CA5016EDE4257D3ECCE52A30AC
07470456BEB1E781DAD4DA06634784C4997AE13B56FC5623575161086B2D5E00
0929690CEF0D7A4CEB793DD6FB9A347FAF34204C15A7E2D02D9B610C8A1E975C
02EEF940B10288C7EF5DBCFB5BFAF54080F2E31EA09F08EF92DA65AFBAF5A3FC
03800CF4695433378E71011031D9E7E5F1491B0457EACC404B3DBE2B356CF85A
4264628923D80E94E10FC1FD2E1816C440EE636FF7A31CF847D1A0C81B1006F2
251A371592162189A9AB14CD7A0AFCF56DE8C87C869C098485817364140C32BD
FF75D3F5B3A7DE7735E0220906463628FF8EC7C416D3B40B85CBD9CF98D2BFBA
97D829B5BFCDECCBA67A29EFA62CB4ED7093BAA0F7AA1AD14BFBC88F3561AED6
A4CE5F5AD717A3C5637A6D7A6974C3F577BA9702A2461F95B0F8404288E9DC99
959BEAF83F773B665ADFF013E4ABB473761FDD03B486099B57C222E9B09B2ECA
41CFD178E04EB64B542C72ABB99B790E0231C66D3DB55884842E1FC511963E5B
2B02D5C72059F559146BB177C46A702F7513E308CFF05EDD3098D5ACA39973B9
79D4B0D9BC0EDF3EBC1FEE970269A4976E3ED96F556BF2D92CC987D9838C143B
731849F4456EA15FECC22DDE3FE42339D8F2D0C675E32119189A59AFA6C4CE01
C3C24A5DAE860CA3C86B44B24D0018D6069E04AE30EB43430F3834FC97A44FA6
2F984399E2B9B143609C0A11DA01C47834CBAADDE60DBE853642312F3ACF881F
E451C455C7AE3645E10A7CFBFA3F9930F42C77BA8B920C558461DF0E6544058A
86798DADAEA261DE25540E7519901C64AF7C50E424CB893BF108E1FCDCBADF32
2E9C875FAF8E40BD1C511A4C5C36D7446355F8267CC1492834ABF582862979DF
3BB02B7D8DFC3B3BBA513028504830F03AEA815E6782968146963B9461849F02
5C679E08B64A719A5344DC54E6086A6F9D611F91EA8F87767F7E7DFEBC70081F
C191067153A1DC3E0D8D0654A476879B820AE7609E4641A7AF7E62E2F7DF660C
906243BE6401F0B16FEFE78D7247DB112DDB5A103EABF08847056CF673010726
0C99E544AAEEA21137B724A79761E9C1DCBDD560338734E7ED10C929D5AADC9E
1379FEE89032189C067A1A9644EB4749A672B25DCDA7062ADEB8C77548888515
CA4E69D6D3BD46C7AD35FA4C22E91693ECD914F750510067B89736E9C49C6438
1D9DCD277FFA23752ECFA0811A4AA7A9FA498F075C49F123CB10EE0E53518F24
0274F7F08B3222F716150F20BEC440FC3867FA7D2C414C608A1FEC2C8511160C
7FC8BC214DB2A3C45855C74BF6E312A6B4BEAC48FE62BA75B14BF7CB2F427A73
A646D035A3F554B06976A277B7DF22DA9021227F77C25F02D0EE7222670D4B37
76266842C276A95DE9B79BD58C7B69CF284B484215779786E9AB47BB87F744D9
6549B1910521759BC023BF6BC86E04793E13C6F593F80621F33E1CC8B09947B1
BE2BE5A311199CD2325530ED0AA0CAAE882CED939E42B6B5639D83055398E6AB
72446D2DBD5110E4B5A20787EC8BF78B22322064E7CD71297765EE4A77D28C01
239F25A20663D7592FA58B6E2ED60F242A62DB9862C934030FB9FDCAB956FC42
07DFE77A4B16D18433F131D30BD49442B55CE02120B31327F8593B1372C9C3B1
7F46EBF3590C4CBF2502D5B1F0149B8FBDEDDF10126F170AEEB91CE632622648
B42244F27BC2C59907BAF3909803668E48571249C437D549006A346F06BE75BD
D9C05C5C7895CC929502B4748044389AF74148B12F136009488494607C1F8A23
2B5517BFFD299443D5CBD52C17AE9DD624A5DF148236F45B9A471487E398B344
B9EB097FF31C13D001B02CDEBDB1C59D76851649472B729E0644B7A1F48AE18D
DE6D244D3E77286513AD1C097B42466A6D504D95C72AE488048271CEED21A83B
82B124ED2AD7AC90DCC05655EC10BD8B5130AC57B91A4DB6DE1956C3013AC564
7D6F1EC282AB0452D1E64D670989A9FDE2F7D9B021661810BF7F3CCCFFFC9BAE
4F51AA8543E4E3940FA03ECD70839CFDEDB8D1D7EA763BA34400F73AB0754ABA
6A0C63F1F22C2B69EF10A70C6034C319BEB910F3D1D3FE47F92BBF59C088901A
A406ED055D822A98E155FD25AB14D6E5F5EEB18A1535A5D4B8C6EC7EE9C713B8
42F069016CCC80899AD23B087C3BFAB7B7945C3A168A903E4D78DCF2D04BF561
B2B8D162549958661C2EF4B0B1194FB8F62E3961DC298FC3E6CB06E62539E4CB
9E4BC31DDB687E42E84191209B6020A8B08FA37286F8572F09D350F75749950C
D24BB72BC7BB63C274E1AA04D2B1F89AE7A57DF234227DCD451CB7B7316C731E
03DE16BF9A559A31050C77B37F78CAB0581E5A322A70EEAA4C4364BEC9FE20E2
F8E1CD1484B994416C0BDE8AE4389DE1C84E0A4A05A3C87854028E0D40150FC2
FD8CF9ED2C22732939121CDD259807F1BFD27E9DAD3E991EDDB54E93960CFC4B
3A93B9B0464BD58B17A52AE75C46D044C0BC298534BB7BC5DC03107A2A45098A
F3212126BA194AB331B4C8E233EABC832FC229BD8147C0BFBD1F78518B768404
9D546C5C64D4973FC4A123940EA1583C75DCE9F4DDD9DC32A2FEA7A06FFB381A
5AD9647AB40A9F1FAD28266E255F2E3CCF5D098F7D805E87672B84099437F4BC
B6BFD76818C96B17AF328CEB1CE6F6694AF8681395FF290734679923E7F2501C
17219CC34EF7FBB3718D4DBEA7A5FCF797882B59F3B79EB3D4CC3C9E616DAF83
DF5E266DE99AE0BDE4FC0F7546A6E4C33A95A884DD2D55C24452937C893D7639
54112FCBEDB9693248BF0A17541A7DEAB235F909404D73959E9E6226ECBA5F94
B1CB8AF3C772D92601CF183DB48E7CB1960E83D16395966CB264BA3599E962F0
BA59FDC9664041B8FADE4B535B389B413B6E0DA7737439D3DB382B2894A143BB
39CADE70E987FD8131FCCD03158C7F8B8A4DCB5C8696F4075C25C879E7541BCE
7A44AF04A52FC6E0B5134C2B4E17EF9D7C76260B971AD4562FC61A5667EB6097
5C261EFB36E2A13E7D98A08B6D92487B2FF3E0FB33E52B43EDF3C6301A7A6808
49DAA1C5B94EDB719CA8048AEEB0F6D4BDF0A34D7CAB2A9FB9D25C15E7FAA2CE
F7C77B4ADFCCDE88393BAAD3CB6332E28FA559853D3C3F5B217B72E826C1665A
56513A0491472121CB31F1E9191C718CF43A203D73D3E1C5243DA1F4D8E19985
4A8E1A43975993E68DA3E1EC27B386B682F1E5B73EF5846EF39D32BB0B3EE911
A0FE46A6DA93E1CED537802D195F1219F72C504956F1B8D73FC9EAB57A990221
E47B6B15E6E41D45946677836442864F7ED4FAA7B797086A0CC7E98DE927251D
5412A2D3895D53180C12B4372227C69C51800762094860FEEE96A7BB88255B14
92B8FE61DBAF351C822EEC0B79A36D74DBF94A4AC309D25EA33637BCFB576F86
D659A29FC6DCF86556EEF51FF9FD8555873035CB781B38D99631BAEE2E1B3E13
B5F8E547CF9A71BA440218B6F9592020AACDAF215A51FD326DF381B0A21644BF
123DA78DD6E97B75976D5FCA5660EA62BC5A6022114AB9913A22BF6AA234EB01
465682770DC2D37FE849000DEA493311762CAE8177D3F8DEA7EED8DA5181EB4D
D8E182CAABFBECC9B9A2617A45A7D42B170A7AEC8ABBECB3FE5E4B9F7142DA3A
B704DF1E9089A87D7A893861F32D603F7CECF3969A23A270BCDA1A144B6457B0
85F20763AEC9E73ADEDA22206F74DBF8D0C8D523F6D4EC7179653DB69E2A87C3
D5714637BC369AEB0B7DB1F8C3CA50A7A23CFDDBB8F1C675BE673A27ADFC79FE
1857FDE28B67556F453646EA6A4777BC8BC58744A272B0D03B2E98BC5115C211
12C6F75023A34F41C50CC9FA17E494A6037CF428F187873FB1562EB9114B2874
0161358970565AA25DE28999DC9D6B30021A0C3BB1F15B3687539B3414270D4E
6D8DEE0F712DF8533B2B6DEE91C421F8A6561448940CD25E50986487BD5A1ED2
57C63E4BF56FDBB5D97C90BBC183BB254818505E2758F0D7831B4E55475689CA
F0F4335678AB14B84687B2D968B764FCCFB66B3B1FECA825BE52346CD8FA59B6
542DA8463FD983A5EB47225FE029353F6026AF4377235E8DA55F9FBA967FD573
7B2F601974398252E51E2E476D13613932986983CD97E047A842121040BC0338
BA7DF2E210640A5A0C9EED9BB04CE049A8F889DA2DA8FFA675755FFD79720D78
96C177473AA81B91B9A8F7F664CBDE8D6349A989A720FDA4DBFAD5655B96A54F
D01DC0EEA2E14E896737044B03B337B4D7F673E11AAA9A93D188847D5D4E0AF1
7A611477D1F4C7F5B44C5748D016AC56778A2D321029B2988B10841910B422D2
432813AFC693721881461E2C1D45190282E93BC77DADA616E84CA7ECF42201AC
58604E598D3F2C2D38BFC9A20155FD12E1666BABA9A98F7DD87B8646D48EC485
C17DF7DB23AA40876AC9C1F7BAEB0582F3926410A8AD6A046DA37B4E055E7E09
1952E9953CCA45589A0550E6A64DEBEDEC5329F71602391354323EF4D85248D7
B374F87300B59F23366A8BE3328D1FF6D8AAC49127FB8671DC9F1B6E67BDE57B
7386A0CA1AFED38C236C60CC8C8E5A1E6FEA3A6DFAAC2913BC0CB2FDC665A0BD
068A8A35FC14F8F5804DE054A35FA984040B20136A7E92F95A856E09016E9A32
EF1D852C05CDCA38A101C0D4A0112E4219122D383066F461A5E2A5A0935BCE98
B81F510D0A29DDCE5086A4DB2359FD01BDE891530143CEAFC1BE7274A4813DCF
93A0B9DF1339997DAB8685E9260C9DC4CE35876B02A7258A97073ED14D38B2B7
98F0A622866C1CD790DED201140C61862E94CCE49B41E09970070AA29DEF8AEA
DE2F5B021CFD311A9EF76A8322B3B48B3E4C06D8B71F44FAF874ADF7D4AA0226
7FD9781D860629857CF549A7DCEF8486E30D0D882DE187636FA002956935167C
42D84FB928F8D1861AD87F069B2EA973CB6D81A34E21CFC35C555F58EBD51128
7D385F459D30BF4C207D032CADFE71B38599FA663CA6BD2230D59534C7043C94
A6A2130C91AB6E404C7867A92633193ECB147D4FF4B44B04DE3F976B9A35CC97
6CD5E6736196580261B24B39E5C4A1EEDE1E80FE0D0F255808A7C9397B7DA1DB
C33547E3BFCCD9102524506F1573970E292D4D7C80AD50B39A63A602A9D4A0EF
3712960D4A8E55E145F821522787B89D48BA8A7924D5CCE3490B04134792AC61
CFAA3491F9E7D82E0E7D0B128E7BEEA04D388BBE8E074FA56CDA3ED9FE1014C4
EB652ABA69ED82F4D27D52E280F9A28019D4EB1257EA11F0F6A2EB8E21F9A2A1
6CF758F2E34F62571C6C4EF2A68211FB629BD8E5CB4ADBD7A53E51D18DA8595E
93EA023DF19D84AAC7E3A1B8F944A298E04B0F86700E0E2B20EC6A036FF81127
F8391B61F3A69220CE5AC84CA19E1C195A78DBA3BF3B7B0D4FA04FE263E9D753
A263412454D55F219048B772385CE7A617F84C31769EBEA23F1CC8A398BDEBE3
21E9BE9141E414AE0D4E330DAF5763CF11124F4B9E03E5E2E54E1D8970DDC21B
663EAC46F2E2A48B39C83D19E8879D3C7C800CA15A4A3578E361EC9B5C741982
CB878474CD7989B206A1363B24D9585B447824246EC9178EAA44A74BA4CABD22
57787993E321203926CD3368591001916065E33F988E573B4BBF0570DA42EB89
06583DEF44EE9A9FD962F326DFEB48CCDE3FE674FEF512C54CC2A787E74F0634
9744F022B79E5CF7AEE21A9B52E295355FAF64920D3F02A2B232B88730472845
46D1351E322881EB1276E1BF479BD79F7868341737C8B42AD6D62BBFED91D1E4
C7370820BB5106853AD592AE37ABAF789F475B22ACDD9D884398CE1E38BC3C3F
0BEEF668938C25AC9D6C1990ECB474FF3A961DC933696D64F09E0B520A88746D
030835D428086241126C71DB30CE284BDE8C9A14833CF4C74B1FE58CF5BE94D1
0DBAAA46EE1FA3FFF56D2F70A3D3AAFF4166ADF482608BA7A2F14016613DD4AF
335CC3904127ED6A32AB2F15D0B8881E6F37D5B063FA4CA6CD0C707A99103417
32999F799842D9F1709EB942F91D1745E17779A702B8FFAF83A70600109AFBEE
98CFEB2EDC493B8F1C5DD14BC7366ED6C9339B0ECA9C8B0E14BE9C54137665D3
B509175E1C013D971DC63E33E13297D63D67BE5FBC6DE37C0795DB1213B63BD5
BE5EEE3C7381B125E62D8495C133D25A8C2A239BA712DA68C3FED49E62B34A31
E195E633266635D9169DBD1FDEAD3AB0CE2F98421C4EFD64E0F08C70BA75C4A8
05C13973082F1F23BC597B476A1B92DFEE6C6A41D7511FCAED328F3925D37219
3A0BC8058ADC52B5688EC801BEE4FE5BF67690D299139F165CF0BCD2462AE7A2
CF6C31243337A4C42CADB0DFBB3688D6D609E2B1FB6BEB2FDEB3C03F55A6868C
0D1F0DA6401AA93FAF8028EDD4731193E8F2B490310010BFE0B3A25A1580F34C
CC4FB353A24151756079E300452E59C1672834BBF980B5258C22796C0B35153C
336C37E21E928F0D8B2B7D7B0F183413365B06EE0C3931D59F745DB12BF07448
1043EF5566F7E795CE0CA6D9194C10A368239901CCA9E8B6518C5C1D2A80F831
56281126D54576688870DDC9CD2EE7656071E345A474690C57AAC043AA09A5C3
3D675FB7D28D164BDD587D379BC7C8FCB5C24331EF3AF66B8911B86B6D5B5EC2
DFFBE6EF6BB4C52397FECAB30C08F0CD953E65BE77960C236D30236BE0F4DE77
6EE423C1B133D35522A63E1FA30EBB5D4A13D3EC32F4637A780D6AE247B4F6AF
14AFA0DE3510B92A777F6910239082E23C48CEE63DA0FE664DE9B259DFEB1BC1
89E9A8FB86E3D0BA1D4E7E6B1044B7FFDF44AAB7E37B64BE9476DFE4643B411D
AAFF9000FBB773AA069AB2CC72AF8405B124F724E90BD49686D90383F225D4CC
985CAA99B3371618872ED0A716EBAF1C0F386FA50382328B9D04649E83FB0CA9
7153F7C35471F2B71C0B57561B38D513B248463E185F0B0A721766F9D9A67638
58ECE45D124154C50F18C7FC33A368A0EF751B35012B1F97A5F6FA5E9282C6A3
FF347AC6A82F61011F700935740370108E10C85C6BBCCEAE6C237EEB0EA65703
FF99D1697EE19B10098A70040650C3F80F33CEC5F9F84AF38F0DD0041834C98A
90CBBBD0D3275835C8A991294D03E69A25357BAC4D45954942A7391D04AC344D
CAB69C41DF6F907D89F9FF0CD039EFD8AFB53F9B9A940DFE53A55E92C8FFE5BC
EAB6730744D6DFB55F9C8A8A96706A8B85C90367C15433F7629A02488FC0033C
EEF644EDD2F63E66D35F246C17C465A4C5100841B321F5E15C1E5C41A5EEF9DF
C3271AD3B97416520280E0F8BB628F12621C7510A8AEC545134E6BA8A3F02E02
8FAF490D162728B20995773523948E0654FAC358CF9379444624E82479401777
F5BEE8554B0E643A05643E8A2320B4FE265111A59B282DC0C5675DA2FE59BDDD
B353D84B05B803CA1AD98CBD414A8942039527D42FFD49923C1B8CC3128A877B
D881A6EE984A0A94162371B23893F1EBB41C308D51054655792DBC9189C1853C
BEEB72AD8FDE9194C3C59F402DD7853979CDBBCDC96B5FECB52679F1C88FAA1F
08D0F8028D4022D3B339D49F780FA24156FC67A0668AD2F3316DC2877E319E3A
A2443601415F2B0D36D54CF5035EDABC2A4D57C5AC8DD6E3BEA428FB8C9DBB1C
EA4AAEDFD73C88602D50DDBCCE8DC8B10A6AEA70BB667541C523B907115E4DF6
F37F08604F4B739DCA3F5C9732774222E680DD6442CF1691BF65E7D1D0E4F6E1
AF83979142EBABED9F1E53910611751211D18BDEB8CFA4AEA44069015B4F10D2
528F65FDE2FAE1C13B73C5C9E0C902A90AD852B7BCD9A24E588BB1269724B776
1D2015EEECB5E53F176E901B73EF02FC4EB863B8CD0857FCDC9335BC61336D82
FC2433624C0B5D1CDD99618B18242307F1E131C3198AC4565C568C834C9A38AF
9AE229FFFAB885DFCF0BAC02B23E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23681430 23681430 1000 600 600
(C:\Users\ibouckaert\.matplotlib\tex.cache\7c\d9\7cd90d84ee2b46c9a90939ca6cc32069.dvi)
@start /Fa 255[65{}1 83.022 /CMSY10 rf /Fb 137[44 46
32 33 33 1[46 42 46 69 23 2[23 1[42 25 37 46 37 46 42
3[23 1[23 7[46 61 1[57 2[76 9[60 9[42 42 42 42 42 42
42 42 42 42 10[69 37[{}36 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 2400 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
2400 a -600 2400 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]](psmarker16)[[16(bl)1
0.000000]](psmarker17)[[17(bl)1 90.000000]](psmarker18)[[18(bl)1 0.000000]](psmarker19)[[19(bl)1
0.000000]](psmarker20)[[20(bl)1 0.000000]](psmarker21)[[21(bl)1 0.000000]](psmarker22)[[22(bl)1
0.000000]]23 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 2400 a @beginspecial 0 @llx 0
@lly 360 @urx 360 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: C:/Users/ibouckaert/AppData/Local/Temp/tmptzvkbluz/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: Convergence_CPs.eps
%%Creator: Matplotlib v3.8.4, https://matplotlib.org/
%%CreationDate: Wed Oct  9 15:06:27 2024
%%BoundingBox: 0 0 360 360
%%HiResBoundingBox: 0.000000 0.000000 360.000000 360.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 360 rectclip
gsave
0 0 m
360 0 l
360 360 l
0 360 l
cl
1 setgray
fill
grestore
gsave
45 39.6 m
324 39.6 l
324 316.8 l
45 316.8 l
cl
1 setgray
fill
grestore
0.5 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 39.6 m
45 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 39.6 o
grestore
gsave
42.509 25.682 moveto
(psmarker0)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
76 39.6 m
76 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
76 39.6 o
grestore
gsave
73.509 25.682 moveto
(psmarker1)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
107 39.6 m
107 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
107 39.6 o
grestore
gsave
104.509 25.682 moveto
(psmarker2)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
138 39.6 m
138 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
138 39.6 o
grestore
gsave
135.509 25.682 moveto
(psmarker3)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
169 39.6 m
169 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
169 39.6 o
grestore
gsave
166.509 25.682 moveto
(psmarker4)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
200 39.6 m
200 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
200 39.6 o
grestore
gsave
197.509 25.682 moveto
(psmarker5)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
231 39.6 m
231 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
231 39.6 o
grestore
gsave
228.509 25.682 moveto
(psmarker6)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
262 39.6 m
262 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262 39.6 o
grestore
gsave
259.509 25.682 moveto
(psmarker7)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
293 39.6 m
293 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293 39.6 o
grestore
gsave
290.509 25.682 moveto
(psmarker8)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
324 39.6 m
324 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
324 39.6 o
grestore
gsave
319.019 25.682 moveto
(psmarker9)
show
grestore
gsave
154.183 12.826 moveto
(psmarker10)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 39.6 m
324 39.6 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 39.6 o
grestore
gsave
25.27 36.141 moveto
(psmarker11)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 90 m
324 90 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 90 o
grestore
gsave
25.27 86.541 moveto
(psmarker12)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 140.4 m
324 140.4 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 140.4 o
grestore
gsave
25.27 136.941 moveto
(psmarker13)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 190.8 m
324 190.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 190.8 o
grestore
gsave
25.27 187.341 moveto
(psmarker14)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 241.2 m
324 241.2 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 241.2 o
grestore
gsave
25.27 237.741 moveto
(psmarker15)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 291.6 m
324 291.6 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 291.6 o
grestore
gsave
33.019 288.141 moveto
(psmarker16)
show
grestore
gsave
21.27 139.622 moveto
(psmarker17)
show
grestore
0.5 setlinewidth
[1.85 0.8] 0 setdash
gsave
45 39.6 279 277.2 rectclip
45 291.6 m
76 291.6 l
107 291.6 l
138 291.6 l
169 291.6 l
200 291.6 l
231 291.6 l
262 291.6 l
293 291.6 l
324 291.6 l
stroke
grestore
0.75 setlinewidth
2 setlinecap
[] 0 setdash
0.412 setgray
gsave
45 39.6 279 277.2 rectclip
45 194.702806 m
76 205.501313 l
107 216.699275 l
138 226.168262 l
169 233.627751 l
200 239.270058 l
231 243.33302 l
262 282.369223 l
293 246.015717 l
324 276.928549 l
stroke
grestore
1 setlinewidth
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 194.703 o
76 205.501 o
107 216.699 o
138 226.168 o
169 233.628 o
200 239.27 o
231 243.333 o
262 282.369 o
293 246.016 o
324 276.929 o
grestore
0.75 setlinewidth
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 267.583716 m
76 270.262518 l
107 272.889591 l
138 274.838823 l
169 275.97919 l
200 276.32278 l
231 275.909516 l
262 282.369223 l
293 274.780128 l
324 280.696468 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 267.584 o
76 270.263 o
107 272.89 o
138 274.839 o
169 275.979 o
200 276.323 o
231 275.91 o
262 282.369 o
293 274.78 o
324 280.696 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 287.762662 m
76 288.135322 l
107 288.340132 l
138 288.172935 l
169 287.541091 l
200 286.403767 l
231 284.74395 l
262 282.369223 l
293 282.556937 l
324 281.751022 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 1.5 m
-1.5 -1.5 l
1.5 -1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 287.763 o
76 288.135 o
107 288.34 o
138 288.173 o
169 287.541 o
200 286.404 o
231 284.744 o
262 282.369 o
293 282.557 o
324 281.751 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 290.637393 m
76 290.679462 l
107 290.537462 l
138 290.067557 l
169 289.182464 l
200 287.833701 l
231 285.996067 l
262 282.369223 l
293 283.658329 l
324 281.901656 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -2.12132 m
2.12132 0 l
0 2.12132 l
-2.12132 0 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 290.637 o
76 290.679 o
107 290.537 o
138 290.068 o
169 289.182 o
200 287.834 o
231 285.996 o
262 282.369 o
293 283.658 o
324 281.902 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 291.355766 m
76 291.315143 l
107 291.086411 l
138 290.540815 l
169 289.592406 l
200 288.190789 l
231 286.308711 l
262 282.369223 l
293 283.933305 l
324 281.939314 l
stroke
grestore
1 setlinewidth
2 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 1.5 m
-0.336771 0.463525 l
-1.426585 0.463525 l
-0.544907 -0.177051 l
-0.881678 -1.213525 l
-0 -0.572949 l
0.881678 -1.213525 l
0.544907 -0.177051 l
1.426585 0.463525 l
0.336771 0.463525 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 291.356 o
76 291.315 o
107 291.086 o
138 290.541 o
169 289.592 o
200 288.191 o
231 286.309 o
262 282.369 o
293 283.933 o
324 281.939 o
grestore
0.8 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
45 39.6 m
45 316.8 l
stroke
grestore
gsave
324 39.6 m
324 316.8 l
stroke
grestore
gsave
45 39.6 m
324 39.6 l
stroke
grestore
gsave
45 316.8 m
324 316.8 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.8 setgray
gsave
52 44.6 m
120.169981 44.6 l
121.503314 44.6 122.169981 45.266667 122.169981 46.6 c
122.169981 115.285892 l
122.169981 116.619225 121.503314 117.285892 120.169981 117.285892 c
52 117.285892 l
50.666667 117.285892 50 116.619225 50 115.285892 c
50 46.6 l
50 45.266667 50.666667 44.6 52 44.6 c
cl
gsave
1 setgray
fill
grestore
stroke
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
0.412 setgray
gsave
54 109.785892 m
64 109.785892 l
74 109.785892 l
stroke
grestore
1 setlinewidth
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 109.786 o
grestore
gsave
82 106.286 moveto
(psmarker18)
show
grestore
0.75 setlinewidth
2 setlinecap
gsave
54 95.848713 m
64 95.848713 l
74 95.848713 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 95.8487 o
grestore
gsave
82 92.349 moveto
(psmarker19)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 81.911535 m
64 81.911535 l
74 81.911535 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 1.5 m
-1.5 -1.5 l
1.5 -1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 81.9115 o
grestore
gsave
82 78.412 moveto
(psmarker20)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 67.974357 m
64 67.974357 l
74 67.974357 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -2.12132 m
2.12132 0 l
0 2.12132 l
-2.12132 0 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 67.9744 o
grestore
gsave
82 64.474 moveto
(psmarker21)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 54.037178 m
64 54.037178 l
74 54.037178 l
stroke
grestore
1 setlinewidth
2 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 1.5 m
-0.336771 0.463525 l
-1.426585 0.463525 l
-0.544907 -0.177051 l
-0.881678 -1.213525 l
-0 -0.572949 l
0.881678 -1.213525 l
0.544907 -0.177051 l
1.426585 0.463525 l
0.336771 0.463525 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 54.0372 o
grestore
gsave
82 50.537 moveto
(psmarker22)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 2400 a
 /End PSfrag
 -600 2400 a -600 18 a
 /Hide PSfrag
 -600 18
a -1340 76 a Fb(PSfrag)26 b(replacemen)n(ts)p -1340 105
741 4 v -600 109 a
 /Unhide PSfrag
 -600 109 a -642 208 a
  {
 -642 208 a Black
0 0 0 TeXcolorrgb Fb(1)p Black Black -642 208 a
  } 0/Place PSfrag
 -642
208 a -642 308 a
  {
 -642 308 a Black 0 0 0 TeXcolorrgb Fb(2)p
Black Black -642 308 a
  } 1/Place PSfrag
 -642 308 a -642 407 a
  {
 -642 407
a Black 0 0 0 TeXcolorrgb Fb(3)p Black Black -642 407
a
  } 2/Place PSfrag
 -642 407 a -642 507 a
  {
 -642 507 a Black 0 0 0 TeXcolorrgb
Fb(4)p Black Black -642 507 a
  } 3/Place PSfrag
 -642 507 a -642 607 a
  {
 -642
607 a Black 0 0 0 TeXcolorrgb Fb(5)p Black Black -642
607 a
  } 4/Place PSfrag
 -642 607 a -642 706 a
  {
 -642 706 a Black 0 0 0 TeXcolorrgb
Fb(6)p Black Black -642 706 a
  } 5/Place PSfrag
 -642 706 a -642 806 a
  {
 -642
806 a Black 0 0 0 TeXcolorrgb Fb(7)p Black Black -642
806 a
  } 6/Place PSfrag
 -642 806 a -642 906 a
  {
 -642 906 a Black 0 0 0 TeXcolorrgb
Fb(8)p Black Black -642 906 a
  } 7/Place PSfrag
 -642 906 a -642 1005 a
  {

-642 1005 a Black 0 0 0 TeXcolorrgb Fb(9)p Black Black
-642 1005 a
  } 8/Place PSfrag
 -642 1005 a -683 1105 a
  {
 -683 1105 a Black
0 0 0 TeXcolorrgb Fb(10)p Black Black -683 1105 a
  } 9/Place PSfrag
 -683
1105 a -1105 1204 a
  {
 -1105 1204 a Black 0 0 0 TeXcolorrgb
Fb(Mo)r(de)h(n)n(um)n(b)r(er)p Black Black -1105 1204
a
  } 10/Place PSfrag
 -1105 1204 a -706 1304 a
  {
 -706 1304 a Black 0 0 0 TeXcolorrgb
-7 x Fa(\000)p Fb(5)p Black Black -706 1304 a
  } 11/Place PSfrag
 -706 1304
a -706 1404 a
  {
 -706 1404 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(4)p Black Black -706 1404 a
  } 12/Place PSfrag
 -706 1404
a -706 1503 a
  {
 -706 1503 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(3)p Black Black -706 1503 a
  } 13/Place PSfrag
 -706 1503
a -706 1603 a
  {
 -706 1603 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(2)p Black Black -706 1603 a
  } 14/Place PSfrag
 -706 1603
a -706 1703 a
  {
 -706 1703 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(1)p Black Black -706 1703 a
  } 15/Place PSfrag
 -706 1703
a -642 1802 a
  {
 -642 1802 a Black 0 0 0 TeXcolorrgb Fb(0)p
Black Black -642 1802 a
  } 16/Place PSfrag
 -642 1802 a -1243 1902 a
  {
 -1243
1902 a Black 0 0 0 TeXcolorrgb -21 x Fb(Relativ)n(e)g(error)f([\045])p
Black Black -1243 1902 a
  } 17/Place PSfrag
 -1243 1902 a -818 2001 a
  {
 -818
2001 a Black 0 0 0 TeXcolorrgb Fb(5)h(CPs)p Black Black
-818 2001 a
  } 18/Place PSfrag
 -818 2001 a -860 2101 a
  {
 -860 2101 a Black
0 0 0 TeXcolorrgb Fb(10)g(CPs)p Black Black -860 2101
a
  } 19/Place PSfrag
 -860 2101 a -860 2201 a
  {
 -860 2201 a Black 0 0 0 TeXcolorrgb
Fb(25)g(CPs)p Black Black -860 2201 a
  } 20/Place PSfrag
 -860 2201 a -860
2300 a
  {
 -860 2300 a Black 0 0 0 TeXcolorrgb Fb(50)g(CPs)p
Black Black -860 2300 a
  } 21/Place PSfrag
 -860 2300 a -901 2400 a
  {
 -901
2400 a Black 0 0 0 TeXcolorrgb Fb(100)f(CPs)p Black Black
-901 2400 a
  } 22/Place PSfrag
 -901 2400 a 2400 2400 a
 currentpoint grestore moveto
 2400 2400 a Black
Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
