%!PS-Adobe-2.0
%%Creator: dvips(k) 2024.1 (TeX Live 2024)  Copyright 2024 Radical Eye Software
%%Title: 2784b97e4d223a8a05ee88ecf6fe050d.dvi
%%CreationDate: Wed Oct 09 13:03:30 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 360 360
%%DocumentFonts: CMR10 CMSY10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\IBOUCK~1\AppData\Local\Temp\tmph45r3omq\tmp.ps
%+ C:\Users\ibouckaert\.matplotlib\tex.cache\27\84\2784b97e4d223a8a05ee88ecf6fe050d.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.10.09:1503
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2024 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70EB02A
60651FC2E263002D3986B7B20CC2AA08330B9FC2E26765CD52266969A86EE30E
71E0B41B6C1C6DA423D3A7E1553D2FAF26EF40DC183099322D362E4965695C52
9FC3E5BD7ABD743CDCB717DB10372A722A39CE53FABB454EADE2179C4CBFC016
A8E893C28EF549CA1692C8D8ADFC471DCCDE266FB4E97A1F3035801F3F034D44
AE6ADA0192657E8078A1D27420093FEBA111333314658021B90DA4E7A8D4B829
F1795501020D5FF0AD25584C1D491A1FDD60F7230D5D725D21F531072155D5CA
12045C71F375116E93825D964FE24E272B239E8E12DB85368F11963CBB4E2B4B
EA559F6A1FED7DDAE902017290E4549337A9F6CC3109F1F858213AF70573323B
78B9F56D9A2D6E6BD0FB038E6B0AEB661D95D1669D49D7E93A21C76C8E0B29CA
73D10BB805BC9D2D488FB292E1D014B47ED472B3DD4819A2CB3E370EEE819BCD
8C722A1D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 37 /percent put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 66 /B put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9433CD9F0A33FE83C973E627DD
0CCC64457AF3C439E130540FBCBC2D0CB410A2986BD4A7B118FC52BD298B1DE6
26D7348E9A27E721E0DB58AE8034A64BE77A35CA8567EE7B87B270052843D6B4
46C3B8817FF88202F88F36C41EE1C42B5BE295014645895872580E379881BE7C
CD90FFDA7BB3B40A6386A75CC6DC32B110F005A191549DF2F43E7D52E442E8A7
945D1DF17FA4A20F18140F4C14D8719DE497FC97A9D171AEC4C9FF966EB2A72B
35A074D10C98256868B461E056C6A78047ACD0F86DDAA2DE1EF3C6CA054ED739
43131131ECEE2A39FAE6EE293844EEDE173452C0642746FD2A9EC08ECC3F08B5
6E85648F42FC8573EAB04A3356958455286C1A02208B0355D14C218D571C3EB1
A050306F1A27C8E215F5894EAE38B79395F23CEA0624BAF427A30EB6E92993B9
DC53E690A5557FB4E93ABE9F95A4D76117CA26949D3FE6160074A98F5E9039E7
79B826B047A5B9FB43E3B96CB32927A36FF5B9354A2DF97AEE0D09A156F4D61E
BFAD51DE7C311530920A93FD6EC3E470330AAE465EC3B744AEE2F5C10C12018C
E74015A5F973442115232482E21867B22A7AC4887D3E82F32C16064A2684EC7E
78E1AB35E2D841DC068CAC8FF7F05E627E42F2B701DF842CD80161A57CC3A2F4
7F997C4288AA1C8CDA5E3C6F89AD4B0309808BF57FD24038848D6697C68C5194
87D2C0D18EFC778584AF39D2814139E38C4BCAE9E1CD3174CFDDA0974B9FAD12
5502A33F3E65A94AC101903963A84EBD442A298F148A17EF4A4CD214B123B211
2202761FBF8ED90C36858E64403E0894616BBD9691E64833B16F5BD6E4B65C39
75F11A545243D506B58E613E278ED900650AF138E6C9FAF5699642B01BC869FD
BC4831ECE580B2828CAC014692B1C29BC22F3F77823630B20CAD23F3E499D174
27DBEADE5D7F3998678417908BAEAB0975329109C6A52C4D512B80752200BAA2
21070A15769A52588647510A48CC6E0EFA905AD6481C545D044EBCF26BF15410
90FDE196E3F97A6B18CD17E1B9F47CC51D45AFB01CB6558FEC2D3770FC07531B
570E755F0645D7EF0ECC05416ECE2F061CFDBC321026A814668A98FB02720B0A
0688426C0C1D3743456C65F1BC7650D3CE0DC86DA16425FDDB424DF4E63CEE76
760DF32C01E262E1E61526CE5DB68A6AFA0948DB4E87804F984874830B1FAF45
62E234C6DC8E159B9A200F49567DF510D5A85D8926542C0A8987B7918B475E87
C219B4C2FF90A98F62753851CB3588E229488FF64E7C3E9245D10AF8BD36CD12
A1038EEB23C7AFC9EABF18C1A1F08C5EDE73C5486C44E0620757B16D81E0C525
C9C4F463E76D416DE431823066A9EE60D6FB239685F5147CD3049BF8F3DC54D5
83F5B1189665B05B32FC49160E566BCE9EC4ED830D15932836CD80CABBB06F48
159CF4611F085AD17B4E1962DC01B9FA47281EAC3B33794C72D4B74CB83B7833
AA1E9B8ED51EAA9B518BCD84CDAEDA86706DABC569392A487269A09EF4162728
9B47D4C462D6637E6939A4A7F3ED0A8D3A743D5E41F801D1578B76814B125813
181187FB7CF50925C135F6CAE420267172BDDBF77DCE8E8581B39E56E5A0F9FB
321585522D571226623E88309FD3AE5E72B583946C4022E044F238CADE93B8D9
66406A86A7FE8030E44BDD907B2A19150135B717098C42546DE12780E548C81D
49A0257326ADC8D0750307647DCD9836BF20727B07F3A54C99C3B2418DB43E8F
8EE2FBACB50D0FA0D6D2111F6FEEA974EA7B96311F8EFC4DCC538A00CEEA2D59
38748511F6D6A70CECC8CEE5F004B9A968B6E38546B5A90CB2B497024BCC939C
72EDF6B691350DC0E4B38EC0F909712B9D2CF909C1D1088FC4CE162A50C9987E
6EFB3DD2AF1E6C0841C99B40E2810C6AB44DFDEB871007EB4BDB4F20AD7EA6B9
4C92DD2A9F58226745D82323FDC64FB7300032D0F1CF6AA03DADF08D515E4A34
5B30931D90305022D3AACCF8D266738945BA0F664F19C53F5FA5C360818BB03F
7FD90568AD1122F496D36637CBF70C06CE36E506532086B7FE6B3A1433D2DB9F
ABFFCDE8B4D3B0A2454F0EA2B0C9E933F4163389FF2FD788695BC7A332B1BEB6
63D6CFF16F35C4BF413F763F20D741FD762A5B2C38D1F95F7F5D8BA3FA244CE1
1EA104BFE8C051D9E894E1B3DD674B2F8968F88225E7D7FD06D49CCF308FEABD
6947A943655BB9AE85E922C3D8AB6FEC0EA8C5B30BE280953FB8FA8ACD031A30
A0F87D7BAF534E49D13772304484CE3848A32F85209065B61A9E7C56EEFE751F
19938EF203AC475020F2DF9ADAFB6DAD38AB97F84DD95F6147A4A883E1B108EE
FB4CCF949403B6179D3A010E267F3284D25D0B9C6EF72F6C290D13B5243B3B0B
29613B7A2C25F64B62964D6FF093684229CF7C631EE4B59170619FAC5C1BDF35
6E08601C2FADE2BDF0B6BB88072C085B8D0F10DFE65073F75032C1AE093B74A4
54F11A79CEE33297C962CE66DD988D542469469509A5FE8968FE58BCA0469FB4
D1C345C18970016EC74A0365074905CB48CBD766ADF44B7CBC465BA466540F38
E107AB2FA2BF7ADCA3BC0C2C9E449CA62CCBC5011B3169B01BBA0381748948BF
C0D6501894B48A59841FF6694D03411CAF6FBB9734125C5E45A818F41A007E6D
95911FACB51BDAD45965CB3E4CD451B5A1D6149A6AF47D9E9D9179FCDE51DAEA
408A5C80C57514678A227A6069B451F0D6D7F4C72073F273AEE696537F4D8F5C
5A0906A7700D0A6F9EB491227C059E6D56E9E828D9C08E466E2833618E89DDE7
E117CF6418C4CA1E6DB44D9C238866D4005893038AA2CB2049DC221DF6D624C6
83DD1467311E591AB226407E6C123E99361020620AC871EFAD9C5F1727A458E8
BC79D7EF269841485BDD30639113DA11A904BA635DF49DFD74246BD0796603FC
07D4C7BAF438865A2E90A95EAE06741834CF66326548EE4C0F40BF7FF44C41A7
2E0633C2A41C84EB8C661706F064A5DDD1563695C781B030587A121D65A97020
6C12BB920A546C3577E87ADE936A6A10BF199A9527D506959FD61BE5C587D864
754B774DB9CDC2DBDEAF1B3E547DBAB5C413E95EA8B6DD3A1680934826983EE2
740228C3940D98C66E5646A863BF928B615D8B33BA11A47113F41640B46496C6
B3CD89F6C7E9F08EA2C2D8079329718524A49248914276D060189F3F44D1CCDF
C35E0126B86ED28DF8CABC99117F0C50FB1669230ED4C68F9A415BBCF9471A58
ECBBC6D66BBCB322FC0E5EA78CA5E1C2AEEE1911E7DE965FD79D8348CE3C1F8B
633847DE60058E64505553419811A93863E9697071E14D3267A7FD5A42D03BF2
7FD5F50C7A388469A4AFE9E374E2FD093624F51880FF79479A6FAC3785D1375F
811E237920DF91D076228D1489D58F3BC00D46513F0358C43A22C413D9A6BA6B
3E1B22759A2B9606E8E074B6742A1847C136340CD545E7999BEFFF284551DDF8
447E285088691FE119B6D9874E21E168D20F8CCB9EAFC55160FCAFFDB53CE712
BF20F148E6556374C45FC9474167B617C8FF56014245E5C1290C81D5324A85B5
C7FE8DDB887F8EE4A2A2793483C6D6101E1EDD9FBEF04E7D6734B38DE6CA1C5C
700D5070FD4D48104580DA51C4A17314470C55AEA9F39503ECAB212121336C36
10B780D5C3D0EA0E74DD912B07DF028FAE10CAE9A67806C140E40D1EC7D9A506
D255EF7D8EE542D8F8AC1D636D8392391FCF5EC2E4C33E30DC6AD69921CC6938
4505C16CBE5D3ECD3894DA862E7C2B3846B4219A7928395B1125F800DDD9D1AC
3A8D63CE2784C0FDCA6E45D806C989E49547160769ED75D8BAD52958AA6416FD
5CE452866E3C5F17B28C79270FA7550EC28DD9A94988CDD4601D3ED898193FA7
AA1843A8FFA0F188C9E2548862F8A3FAE8F4D9691A7F11E9AB254A1FE3C44528
AF4892D0BC70C51A32EBBA99AE00BAD22F6E76DC2B562EF1D149CBF3E61B1FFB
F83C1487BE988E10436CEAE84ACFA507FCB2FFBD28B1DD0F1D1316595FE92795
FFB80920FD4FEDC7C7919DBA063FCC6F3ADE7F9863E8C99AE33A277D3B99129C
33142A5F7784194417E79CAFEDFA01EBA3EEAD118C0998CC404F2A6FF0DFA106
6A326DDA013B9D735C89B8FBB4E29FD120C80C17A4AD814003525AE3DE517463
D40106D9B7489B8640F388ACF460C6CDC21B16EF0CB0298B9F28A257F8CD7866
B62E37D30B545805530E43CBD2FC0BE2027421CEC482A876E7F945A4ED22D9D0
FDF012AA8EB2C5B2034A4C2767521733883C19D97DABC0EAB4FB6CADE0678B69
10B61BFE4A6FC2D2CD5A6924AC5832F1DF8A38CD151AC42D455955F5D78F7C7F
F094E896938B584450D956484BDD9556C0D665217B01EE117080B79E308D5438
2BBCA80CEDE2122DE4144C050E7774A20BD760FA468E030625DEC486816C57DF
0915A3427E84B053B8B06DC400C22276B1ECE1E1795C7A8E79F0210F287B6C88
72243285D48BED4D81AA80FE4A91F8FC5D358F4F55F2F7B9794A3E2BA2FD15B0
1749B0126F39C1FDC86DD6502ADC89CF698C61B8DF4CC9DEDA7E92127E8B61AD
F692BD6A24A965DBE0847215277B4B8F92F8889FA38CEFBF110549EDC54C3508
402F377711C14A08D425AF53A98AED26851E246297D099C1AA2E5229CBA8765D
8BF2A0EE592D15D969A926C557C16155263E10BF9D77C491420C739CBDB14D7B
301AFE7F35B98AB6E9C12E3EC902C5DC5C9223A7EB5CAE00D4A00F4242D380F7
DACD61E7A0ECC5C0291B1AB301805AA95FF0481289614A4BF4F679A567BAB376
428276643135EC8868C4B582049EFA0227DE0E3E81FBCE0B7CFB6AED975319AC
4CA4EFB802B743C9804297735F9280506A77A7781E4BE9A875D46354FABE4A40
EC4F106EFFF6F4F1A9CC6B8000D541ABF5DC4D135EAE1E8C37F902CAC14C430E
823F63207585439C7A73BEFC8B674F4AD8C2F59DF3A2ECE63BAE23285F6B6044
9EB7A7CB34CA98AE4C1D887CBF2A5E97D9190CAB2284F02BD11FDE0EED91DBD1
98A840A3855A56BDBC9446E7E18F0218DE34818E2C670F41DDE2A91932F26560
5B476F4DF9176DCF01B3D023668ED4AF2C831EE6D87EB1429D9ABE58BABA3EB5
B7A9FED34124FFE595D6ACA9D8D83D39EB5D423479C22899516E56202C6212B0
507300DAA0F4BEE1725095A01447AA2067B152B3A2F3E863BA27B87F143E5BA1
9CA39FEEEF159924071D4280D35260BFA75A02EEB96458AD317DDA6C710FB523
AF7D18DACEC4E708B0E5E11CF3A650413DFC7CFC68DEF292965A08BED5CFF784
282EF7469B4C732827879A5303D18BACAF7F086516FC3B2E2885E319375BC3D0
F5422CFD9D3AFB11DD7D08056F1BAA1A25CADCF2741701FADB4892516EDD0A35
3662A840D110D511FE28164921AE5C7D45C884C443D468E084879CF688454CBC
3BF0ED91C045C1657A07837985B3717FF38908E132AA42E9434F7D4CE9A1AB22
9CE047BBAE15FB86B5082E16F1B505853B5EAD5137228EDB31250043D2FF02FA
493C948C0424762597BA425237AB4323C2FD2DC926D328EE11FFB9B858D7CD8E
E1EC4F702F27004F29EF3EC274F3689DAD43F9838201883C8318338CA724FB63
6EBE324C7F926BAD7658C9B5E774A199A124F5BBC40C2905282C85B73DA04241
7CD798E6A231DF90A8A77A82B95FB52BAF7C9C44C58BA0D70C2CDDA1843CFFB0
B9274FAFC2E2D51E3B782893E163173542432B43BECF1E1DB128D7D3E64C6AC8
17F3CDEEBD294E0CA3F35B490C7A961CEB8318D2E2304ED73212F782230C1D90
520B4CBCB370A6F42995788800212F8C91BD116427762C0DD84A66A087A1B438
8B1483B0D251050A1D650EA049ECA9E0D4CA6950A39E7309F2CE62C1E2311F49
2BDF8FA7EDE5BB4B28A41FED51C99D35E49E58E9F16336331B80C7A7DCF25563
25EBFDC0AB8A037B13A9C528A198B8EC86EAA6DF23E151FE71EA3C0B8B191833
3C2F7187396E57CA1E60F95795AACB4D274D897E3358E541AC6909136C1BFD71
16A0EEBA8B7991A17B0206D334E2A76193069ACC5DBE214B5808B1C61B8622F0
BFE61086C806E3DDC19196D4DDF01BEE8872527D73B9505A647F6C3A4347CE36
6C7D5A55F3558F3AF5B36CBA85FEB59C9A6B6A945EF83A38A72275769F3F4225
2E2B372EC16EFC956818245C111B74614DEF560346347B43A543710F58E6805A
BA6401BFD74F523B6D4842BDB1CA2561ECF6CDD26EEFFBDA1D758FF960976C49
B04FC263176BA1E1395BA031D566B07E1934811982270DA8F43BCB9443C54FF1
26EE0468EDC510B7E94D20BCAC2E17BC49437BCE1218DA0F8CFA71334AA8D196
63C11F482F87BE71A51EE78332EE2D0F0626626AB78036D9E6C5E52E03113F9B
9C2DCB834856A2A46D83770803976EC5F7FC8740CA481DB490030DBF9FF2A7B5
FBD446BD5F9378BE0F6A05112CF09C08947942462A1DC0C3095596C4FF71AA27
8D331BA837567D6824022DADB4D3FD63096DC9005E2A1ADE14587BD26F061534
81A8D7B39F156DE5571310151ADBAE42D5818A199E88FF4497833E3C7F550E44
9AC0FB07FD2BEE54E6A69B0FBB3717AA63CC7F31119CF6E252F8B274A4D995D8
5A769555FD737441425417347D561FBBF5FA24A4556ECCA8E76E6FBA72F2CE7E
C4389853C60382DD8051051DFF44ED3650B1A5738DC143B7D41EF6DF8A4D19F5
C4D76AC86727EECB11B9CFC6D28DE39E649E6D2707BDDEC59A84DDE5D5FF995D
4EEB87B8121E7288CAB5F0DA3BD32063B81443B4BF200C769331A470EEAF8172
5C53CEF640093FE2ECD59CE9DF3DFA8C070B8E9435E0E37FB33157AF486D1B02
811D684D63DA74ED0DDFDBD1DA654DC97754339B043EDC8B0C83F41B8A9C1364
A78BEF8C4D25D8904DD89F5CF52272509C3F767E8007131DBDD8E6BC5DDF4118
182B1B1024CB17679C6732AFEB3865456D4FCBF90BDD481C874EB27F4F6AD669
6DB5DADCB2E3143D958C65819C2CF0353CCAA6927EE0E154DD741FDEBD093531
B61D7EBF5065325DCB61480DACB0CFFC26E2EDCEA1E15291C5B2AA93A3C353B2
B267A84CA9E82B593AD63F595F30CFE3F4490544D68FC75418EF55CA71118128
D3B24425C40E6943DE484B4F9D3EFC7C1ADDE7192AE0A536547CA24E807E4EA5
F06B9EC442AE60E658F55ED179B30CBA54D4BEF411687934F07C43CD2EFD44C0
5C85BAD0B72E8EDEA7CB6B12A3F5DE259C8D91FB803BA527AE4C19E3C5353AC4
B96ED05F319B48030D36BB2E439B51159A7C2B8DB3D664AF1D1AE18981E41B78
D7545FE4A41492065E6479FEF5AA8D5FECEAC8EE8800878CDCF32626E1A558B2
9CD81EF05C12C8416B0ADBD9DC3997EDAF747DF9C706DC2818641F7F968FAABC
B54FEFB997C7824DF4E0D43DC129F15E71FE84E8209072D55F4CC233ADBD8CE6
37C18599F9541D47FC6B60D2239DB82249E0A1BB3AE61CBC7B4C57C90382CADB
A85FA26DEF6EAFB5C2EA6AD2D9A8932099283CC4AF2090239B0BAFD526C3E6FE
8248735CC3563539F23B6F8D2DD1DBC280B11628AEA76F9641CA7E75D170D866
3890574298F4C26B78E119EA9BCAF2B7228235A24606EC2A84C820A569ADD679
8F10FFBFACDC5C6C2F44BF832E4DA8C9440225F16007C77CE942893B45682BDB
378306FA68FB13E509910B81E6B2029DFCC8BCC45004B2E76269E0FEE8529026
8471582E9FE51336F65C99C7C4F7F34C81B0100D99AD9BD40781D58B963E69EC
A474CBA8F6EE7ECD1B45795A97E047DBA798188041487435EB4FE7FBCBD0C59A
8F8C1BEFF46C8AB67AEA24E209D6FAB9BA4C22520DA981D62D7A7F5CCF27639B
43C1FDAC2E6C363E8524711D24FCE2A956B60AFBCD03AD943DC4A55E6D8A58C5
8F3808AA7262E41C3284454C669A2965DCC9E7CA76D1F46D1F0C5E32D7675C8E
CC6A42989C12E98BB93756CAD6BC85A8620CFF7247780F1E3BCF08077359EC1D
0DECEC9DF47424D3566960546A95E5F715670FC9B3655DD0E939536AAF0F5B7D
559739F174D66055E875D59AF7C77342796363A71A19EE5838DFC184BC51DD38
6DF79B216160EDCF87C2AC4871ED6FDE186E6D7CC523246C22D1D7E527C55892
45983CD22AA7A8965FAA0017D35DD8A360006E87103F805D32A6446753B1B02C
5A166C2939C6B316036F28CEC4FCCA8AC5EEE42BBD4DFAF86CCDC095562C9F9F
9F6D23FF00CC3E9D671040E5B0CB97668E61AE1118127785060840F89FAD7E78
5472F175287327A5987C43E34B7A21AADBC0EA1116CD7BFC488200A3EADB8ED5
79E1BA0F1C4C2C8FD8EF2CCAD6978D524772462A1D126BA40CCDEDAD3C8EA5A8
600601D21DAC362471E3F1A45C460E62EAB26D05E3D29AAF6E68A8ED84ED1CF2
B0952C0DE58A9722761B998C1847E92E87F1AC01DA9347FF969C93348E983CB4
F863EB2C0E88E80E89E789A6C30CF39FDC4B777928E2AE35FE0E9F7137126A68
8D33B932F27BFE8087CB00FD400F60E07131F4EE9B38D2FE214F50050AE3D9E5
0D530F190227CEF2CAA5344AAF9F64E3D954A51D9106C1124FDC6700D55AE929
F0682BC3336BBDF8C6B215E0502C50F27209B04EA0C9424B4AB9C6C5439AA0F2
4DF975D9F98AF3EE529F51F4D998FE16444ADFF205E33D1FAE99362A4483E26B
D10F9906C135ACE5D12CD6A2461D85C9908B4E2A682E9E27A7E2ECB814EECDB8
F0F29633C37DDD3BB81ABBDA0604D019018FDA0D6E56F5141ECAE9E372A811E6
03CDF629B8F2D5DC6983CB9BCF4CCBC3321A493FF9C5B4B16149A215D9867BFF
9747B08823CED1CF29C3BC173F47CDEFA4DA192AE46C82DD5C44FA3993D31A53
EF806E6269740402EB5049940C90A3133502F4A5DAB0F367D13F641F34D01533
BD6625EC1B3136AF436B1A76062334F4090BB9E0A410F57540A94440AD9EB758
804E4A2D5EDBA95B2412A0BE4FEDB11094FDD354D2686FAA753437B1A7E063FA
0EDF7C698081219DA2DFDDA17907854B2F5C897AAF5967B32D79E7C08811BC11
56C57CCAFE7C938AF1A5C487EE067FF2A5F1E7DC4DC8167AF174F0957603B6B9
F3B91916A84B5A0E61B4A9C39B289FE3C7B2E08FDDDAEF4955BE3A731586068A
C712329DD5B3DFA296F7942750A8A06D72BE5399D662BDDA9FF6CBC10CC3A32E
957A2B5EF8A2C645205748184445092CD67B521C0EA8A598BE660EBEB96035D0
BDF95629E81B4DDE13E0812881414F138AB0329B83E34DC73BAA50412EA7D098
21599C44147A67EC47B810C7615E2A93292F03AD99A3F21889C37C4F69697C05
3B02B292537FC5617416BE285E1824846A09146A26FD043B7DFCED8A86725B41
F004C2FEA938407FDC5B283FF6DFC7FB03D1698BD27B2FD4E09B65357FB27258
0F459715BDE2E6B98D81D12526E44B38310727831E6E40054101AC6ACC887F28
0F9A6513BF959E4F8348015DB891456838800C333199CD04781F38113DE50532
0945AC82AA2256ED0176F69318AFEA0EAAAB93EB5A1DBE0F1C5474CBE1CDE424
0E6F26C51D0AD9C7EDB19B39885DEE90EA6F93FD0F57A477B8AF743D27048BC9
7317177CD0EF6372F72E76ED587B8F4691D86EF6A6B2C08C65E74417D1183B61
23319A0055CC6EB2871E076A155AE80F33A1186CA572A9355DD3D2CE8B89E1A9
DEBB0122F11BBF00FBB4F2570861F480F9E8906ECB5BAF66965423A6EB277BEF
F9DB08C503F2B8F12DEA4C69A085EE8F8A92DCEC7F8F3745A0F5F09CA74AB7C0
35C096A1822D0E47BBB36EDCE8CD18DB8465A9C536DDAE0844E6ADD3B6907488
53A082156D3E564BD0EC481DD02A60535F7159C87F0B7457CED06063AFBDEF97
E0B59CA33A3FFACB3C3D71592EDCF6628357599BCF81DA54F45CEA22CF6078A7
31BD8EA7835D1CA00B66F7E62987CEB075D51E8EF006033A4C316ABB86A9F893
6E245D1CEC7E44365C7A4C771A0DD482E3CF080A08646EC778DF2C5B6F526AFD
DD7F833003AFBE0C8AC7CB7A159DBC948FBAECBEFA5D87A219D35BC31B745414
2E82AC6A7E12A250E6CFBD27639FCCFCBF44DEC3A3FD4A46E83E08F9F85333A8
5779420852BD0FDE48DB7E771BFD2B5AF6491010C1F452E374054486F0FAF04D
F8E1F3D4AD4D9AB6AD038697CD9E584615A9078B9207F98596806F30AB0EE97A
38813A6A746AF9D4E2D6C9203829D27B86F54FC72D24499922A15CF121F6CB8E
A4DD8E58189474DBE700BCB7E8D52D6BA975972BA653A11ECE1BBF4F2B12FF82
E451F9C2CA22E1627D543F72711B970D658AAED412D4EE0F15591CC4E141BB68
4595AADD0C77D7AB6B1401E7DFECE9674848411674B6CCD103DFC39457001B33
CF47670B245217CB4A423359283A02847A562AE38FB3827475ED16A635DF43C7
16172EC350FDA44058B37D04F5B3FB73DADFA92F783DC675D378FB53F14472D8
7B06A87BF9CC69171285C39E5A82495CE69437B4EDC0E39267AC6CB309ABF85A
E88F0E48A65C7C247CDA6EDD1689FD3081EF590E936D973B3E8DE5637B1FF2E5
7D32B96CB5E883EFD11E68E9413EEF0F0E4D7FE7A69F934F87679CFAC12A6286
9211A3ED1C053687C9DF87782C6E0A79D7A063F91ACE8F9E1402B6E98DDDDE38
16A5AE27BC4433AFBB00C552194D1CE09E9C8AB4F24F3B6901428BF8417E1B1D
2D270FC1636BE725293B7AC9C86765A2F2D29BB20A82BFA97C7B7369A131852F
C58D31D8010716890824DD3D3B6309B68BE76D8A01C54B35E6A57634EC244ADE
AFC9524FC7A6152B1964074F02FD9394C1C7F262A2A41F815D7F9C36FEA62251
5CF7415EA184B2B9C650B0DB731FA950C43A598158F694497F3620942F573366
94B0035D843F2C4D54FD5E9541E381FE9DD51E897C3E0D285B51EB1E515B1733
B684C22829739C5FF25AA7ACF4B84E273BEA62D121605B4A380987DBA6D6E3C1
7B6757010A5188E135EAD958C6515FAEC14161437D8C76BF744DC312091FB923
73C71F3F374511A11C4E9B9633A2F077A94D54DECC82B85C7591F01A7E41DF40
831F18019D309997E5DE57FAF72A1FCBB25B90D2541419A68A595AC11A83FA4D
7F128D893B3AE4658D81CB3441F51C3A30C001893A89070BD14FF9E6D4D96B22
E65304BEA6CED35D26CCAF653530189720236B0872A8FD377FCFD8602FF2B568
105165743C21DCF80B2D85F634830FF3A9D84F843A0E7DF85B64EC7AA85151EC
744A5EE1318421ECF285E4AF20B0A71BF3B03E09503E357C0098265EDD8DCF06
F0B45B618A78EC6041F1BFEECD458290AE962D37ABE97A4BDDA5F52A37790790
7EB0F690DB725ED59E11115F6F9E2B75D7A327597EFA3924733964CDF40EB19C
9E607D1C9E196CADC505C13ABD56A2081BE870237E2A9BCCBC42E36F75A7D1AD
C83E2241072F54F90B275086A44F21D1F87604437102601F304197B3B9F351A6
7C0AD60EF76041A245A8E75AC0F56DDA7B1DF282358EC150E294DA02F9F2C6B4
B9D2F2960C99EB774377F51CD1BE69ADCA581669C406D49673FBF71EAA4AD66E
E53E4A24A7C214FD24C23A203127A4EDBA39B312DEB3B5C8F53393163AE02B94
FD0091F502C76E6AEFDAD63C3EF1A9ADB7111FECA4DA5EB55E75F33454371B62
37F86E96CE0CD4A38C91EFE53142E67FACED36475C7FE757FB6E5A9809B0B423
D9672C97330DA041C0EEF10086BAB3C2791AF98617CDDDA08D3E467A676C410D
8E142697F54DB5DE5FD40F891D864398B69FB9BC086EF90E44611A7C3534BF81
6D19A0B2F3C4B5EF63DF20261EDD8BD0BCD0924DB250A04D5EC88B6736333B20
B06F6E14D95F6EAED724AEE3CC346017BB4ED8E87B759F7F08DDBBBF796F8C24
1FB3243D635F507887DCD553740DFD6585EF18D556E12406F9D197C3072E276B
31E8D09E6774772F699B925719A9B16AA12FAB19126FC98A5C073039B4B03298
794992E62474B11F153C99F27A4CDE33EE28791BBA0298705C33310D076E0C7B
129BF19928CA8B286AF3B755FC4C3F11E336DFBB62BAD6EA1A901FDC2F92A51E
0CD200D4731215747F2934A1B84A2222BFD38455BA071FBFD021C0B1B1874EA2
6371264089994567EA77C774E6EB49ED3C4486C44B309DE44E29B0BFB4F2496B
9F6C457E34447F0D0CA467E821248939F2FB72C37B4503A26B85B610F5C67E9E
A8B908C769C9F756E5A772CF52104A93305D3B0DBF1749A10E6D0237DDAC1355
61441F2BD97A140E6C5A003DC6FC9BE0C610C53A234D9B2062D9A79C33A39028
F82BDDD548F3EE00348A4A4E0399D10F29BA5F890DD2DAD019B7AD6A4DF185B3
874E1D69EF05197AE7FFF5369F2E58731035DD58250D90D9BC0DB1153150A91C
0446252B101C766920069D8F61994F1000D3C767A9A1DDA82FAE45A0DD065687
F27BB27ACAD443B19A788F59F79A78F033F3F4D937BEB67D6DEEBF46F4C1D329
D22D8922654D11B99B3DEF9AA1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23681430 23681430 1000 600 600
(C:\Users\ibouckaert\.matplotlib\tex.cache\27\84\2784b97e4d223a8a05ee88ecf6fe050d.dvi)
@start /Fa 255[65{}1 83.022 /CMSY10 rf /Fb 137[44 46
32 33 33 1[46 42 46 69 23 44 1[23 1[42 25 37 46 37 46
42 3[23 1[23 7[46 61 1[57 2[76 10[59 8[42 42 42 42 42
42 42 42 42 42 10[69 37[{}37 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 2400 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
2400 a -600 2400 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]](psmarker14)[[14(bl)1 0.000000]](psmarker15)[[15(bl)1 0.000000]](psmarker16)[[16(bl)1
0.000000]](psmarker17)[[17(bl)1 90.000000]](psmarker18)[[18(bl)1 0.000000]](psmarker19)[[19(bl)1
0.000000]](psmarker20)[[20(bl)1 0.000000]](psmarker21)[[21(bl)1 0.000000]](psmarker22)[[22(bl)1
0.000000]]23 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 2400 a @beginspecial 0 @llx 0
@lly 360 @urx 360 @ury 3600 @rwi @clip @setspecial
%%BeginDocument: C:/Users/ibouckaert/AppData/Local/Temp/tmpqtj7z9hc/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%Title: Convergence_Blocks.eps
%%Creator: Matplotlib v3.8.4, https://matplotlib.org/
%%CreationDate: Wed Oct  9 15:03:26 2024
%%BoundingBox: 0 0 360 360
%%HiResBoundingBox: 0.000000 0.000000 360.000000 360.000000
%%EndComments
%%BeginProlog
/mpldict 8 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
0 0 360 360 rectclip
gsave
0 0 m
360 0 l
360 360 l
0 360 l
cl
1 setgray
fill
grestore
gsave
45 39.6 m
324 39.6 l
324 316.8 l
45 316.8 l
cl
1 setgray
fill
grestore
0.5 setlinewidth
1 setlinejoin
2 setlinecap
[] 0 setdash
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 39.6 m
45 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 39.6 o
grestore
gsave
42.509 25.682 moveto
(psmarker0)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
76 39.6 m
76 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
76 39.6 o
grestore
gsave
73.509 25.682 moveto
(psmarker1)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
107 39.6 m
107 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
107 39.6 o
grestore
gsave
104.509 25.682 moveto
(psmarker2)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
138 39.6 m
138 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
138 39.6 o
grestore
gsave
135.509 25.682 moveto
(psmarker3)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
169 39.6 m
169 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
169 39.6 o
grestore
gsave
166.509 25.682 moveto
(psmarker4)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
200 39.6 m
200 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
200 39.6 o
grestore
gsave
197.509 25.682 moveto
(psmarker5)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
231 39.6 m
231 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
231 39.6 o
grestore
gsave
228.509 25.682 moveto
(psmarker6)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
262 39.6 m
262 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
262 39.6 o
grestore
gsave
259.509 25.682 moveto
(psmarker7)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
293 39.6 m
293 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
293 39.6 o
grestore
gsave
290.509 25.682 moveto
(psmarker8)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
324 39.6 m
324 316.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
324 39.6 o
grestore
gsave
319.019 25.682 moveto
(psmarker9)
show
grestore
gsave
154.183 12.826 moveto
(psmarker10)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 39.6 m
324 39.6 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 39.6 o
grestore
gsave
25.27 36.141 moveto
(psmarker11)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 90 m
324 90 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 90 o
grestore
gsave
25.27 86.541 moveto
(psmarker12)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 140.4 m
324 140.4 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 140.4 o
grestore
gsave
25.27 136.941 moveto
(psmarker13)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 190.8 m
324 190.8 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 190.8 o
grestore
gsave
25.27 187.341 moveto
(psmarker14)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 241.2 m
324 241.2 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 241.2 o
grestore
gsave
25.27 237.741 moveto
(psmarker15)
show
grestore
0.5 setlinewidth
2 setlinecap
0.863 setgray
gsave
45 39.6 279 277.2 rectclip
45 291.6 m
324 291.6 l
stroke
grestore
0.8 setlinewidth
0 setlinecap
0 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0 setgray
fill
grestore
stroke
grestore
} bind def
45 291.6 o
grestore
gsave
33.019 288.141 moveto
(psmarker16)
show
grestore
gsave
21.27 139.622 moveto
(psmarker17)
show
grestore
0.5 setlinewidth
[1.85 0.8] 0 setdash
gsave
45 39.6 279 277.2 rectclip
45 291.6 m
76 291.6 l
107 291.6 l
138 291.6 l
169 291.6 l
200 291.6 l
231 291.6 l
262 291.6 l
293 291.6 l
324 291.6 l
stroke
grestore
0.75 setlinewidth
2 setlinecap
[] 0 setdash
0.412 setgray
gsave
45 39.6 279 277.2 rectclip
45 290.74388 m
76 282.439224 l
107 252.350314 l
138 187.383897 l
169 78.005446 l
184.142379 -1 l
stroke
grestore
1 setlinewidth
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 290.744 o
76 282.439 o
107 252.35 o
138 187.384 o
169 78.0054 o
184.142 -1 o
grestore
0.75 setlinewidth
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 291.278188 m
76 290.144619 l
107 285.811727 l
138 276.20124 l
169 259.870485 l
200 235.945163 l
231 203.939145 l
262 141.118201 l
293 163.623591 l
324 134.208102 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 291.278 o
76 290.145 o
107 285.812 o
138 276.201 o
169 259.87 o
200 235.945 o
231 203.939 o
262 141.118 o
293 163.624 o
324 134.208 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 291.340932 m
76 291.090116 l
107 290.068391 l
138 287.767146 l
169 283.837486 l
200 278.071511 l
231 270.355628 l
262 254.235399 l
293 260.636087 l
324 252.528979 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 1.5 m
-1.5 -1.5 l
1.5 -1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 291.341 o
76 291.09 o
107 290.068 o
138 287.767 o
169 283.837 o
200 278.072 o
231 270.356 o
262 254.235 o
293 260.636 o
324 252.529 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 291.355766 m
76 291.315143 l
107 291.086411 l
138 290.540815 l
169 289.592406 l
200 288.190789 l
231 286.308711 l
262 282.369223 l
293 283.933305 l
324 281.939314 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -2.12132 m
2.12132 0 l
0 2.12132 l
-2.12132 0 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 291.356 o
76 291.315 o
107 291.086 o
138 290.541 o
169 289.592 o
200 288.191 o
231 286.309 o
262 282.369 o
293 283.933 o
324 281.939 o
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
45 39.6 279 277.2 rectclip
45 291.359381 m
76 291.370069 l
107 291.335186 l
138 291.219056 l
169 291.000062 l
200 290.666217 l
231 290.211296 l
262 289.310709 l
293 289.63252 l
324 289.1947 l
stroke
grestore
1 setlinewidth
2 setlinejoin
0 setlinecap
gsave
45 39.6 279 277.2 rectclip
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 1.5 m
-0.336771 0.463525 l
-1.426585 0.463525 l
-0.544907 -0.177051 l
-0.881678 -1.213525 l
-0 -0.572949 l
0.881678 -1.213525 l
0.544907 -0.177051 l
1.426585 0.463525 l
0.336771 0.463525 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
45 291.359 o
76 291.37 o
107 291.335 o
138 291.219 o
169 291 o
200 290.666 o
231 290.211 o
262 289.311 o
293 289.633 o
324 289.195 o
grestore
0.8 setlinewidth
0 setlinejoin
2 setlinecap
0 setgray
gsave
45 39.6 m
45 316.8 l
stroke
grestore
gsave
324 39.6 m
324 316.8 l
stroke
grestore
gsave
45 39.6 m
324 39.6 l
stroke
grestore
gsave
45 316.8 m
324 316.8 l
stroke
grestore
1 setlinewidth
0 setlinecap
0.8 setgray
gsave
52 44.6 m
130.686148 44.6 l
132.019482 44.6 132.686148 45.266667 132.686148 46.6 c
132.686148 115.285892 l
132.686148 116.619225 132.019482 117.285892 130.686148 117.285892 c
52 117.285892 l
50.666667 117.285892 50 116.619225 50 115.285892 c
50 46.6 l
50 45.266667 50.666667 44.6 52 44.6 c
cl
gsave
1 setgray
fill
grestore
stroke
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
0.412 setgray
gsave
54 109.785892 m
64 109.785892 l
74 109.785892 l
stroke
grestore
1 setlinewidth
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 109.786 o
grestore
gsave
82 106.286 moveto
(psmarker18)
show
grestore
0.75 setlinewidth
2 setlinecap
gsave
54 95.848713 m
64 95.848713 l
74 95.848713 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

-1.5 -1.5 m
1.5 -1.5 l
1.5 1.5 l
-1.5 1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 95.8487 o
grestore
gsave
82 92.349 moveto
(psmarker19)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 81.911535 m
64 81.911535 l
74 81.911535 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 1.5 m
-1.5 -1.5 l
1.5 -1.5 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 81.9115 o
grestore
gsave
82 78.412 moveto
(psmarker20)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 67.974357 m
64 67.974357 l
74 67.974357 l
stroke
grestore
1 setlinewidth
0 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -2.12132 m
2.12132 0 l
0 2.12132 l
-2.12132 0 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 67.9744 o
grestore
gsave
82 64.474 moveto
(psmarker21)
show
grestore
0.75 setlinewidth
1 setlinejoin
2 setlinecap
gsave
54 54.037178 m
64 54.037178 l
74 54.037178 l
stroke
grestore
1 setlinewidth
2 setlinejoin
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 1.5 m
-0.336771 0.463525 l
-1.426585 0.463525 l
-0.544907 -0.177051 l
-0.881678 -1.213525 l
-0 -0.572949 l
0.881678 -1.213525 l
0.544907 -0.177051 l
1.426585 0.463525 l
0.336771 0.463525 l
cl

gsave
0.412 setgray
fill
grestore
stroke
grestore
} bind def
64 54.0372 o
grestore
gsave
82 50.537 moveto
(psmarker22)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 2400 a
 /End PSfrag
 -600 2400 a -600 18 a
 /Hide PSfrag
 -600 18
a -1340 76 a Fb(PSfrag)26 b(replacemen)n(ts)p -1340 105
741 4 v -600 109 a
 /Unhide PSfrag
 -600 109 a -642 208 a
  {
 -642 208 a Black
0 0 0 TeXcolorrgb Fb(1)p Black Black -642 208 a
  } 0/Place PSfrag
 -642
208 a -642 308 a
  {
 -642 308 a Black 0 0 0 TeXcolorrgb Fb(2)p
Black Black -642 308 a
  } 1/Place PSfrag
 -642 308 a -642 407 a
  {
 -642 407
a Black 0 0 0 TeXcolorrgb Fb(3)p Black Black -642 407
a
  } 2/Place PSfrag
 -642 407 a -642 507 a
  {
 -642 507 a Black 0 0 0 TeXcolorrgb
Fb(4)p Black Black -642 507 a
  } 3/Place PSfrag
 -642 507 a -642 607 a
  {
 -642
607 a Black 0 0 0 TeXcolorrgb Fb(5)p Black Black -642
607 a
  } 4/Place PSfrag
 -642 607 a -642 706 a
  {
 -642 706 a Black 0 0 0 TeXcolorrgb
Fb(6)p Black Black -642 706 a
  } 5/Place PSfrag
 -642 706 a -642 806 a
  {
 -642
806 a Black 0 0 0 TeXcolorrgb Fb(7)p Black Black -642
806 a
  } 6/Place PSfrag
 -642 806 a -642 906 a
  {
 -642 906 a Black 0 0 0 TeXcolorrgb
Fb(8)p Black Black -642 906 a
  } 7/Place PSfrag
 -642 906 a -642 1005 a
  {

-642 1005 a Black 0 0 0 TeXcolorrgb Fb(9)p Black Black
-642 1005 a
  } 8/Place PSfrag
 -642 1005 a -683 1105 a
  {
 -683 1105 a Black
0 0 0 TeXcolorrgb Fb(10)p Black Black -683 1105 a
  } 9/Place PSfrag
 -683
1105 a -1105 1204 a
  {
 -1105 1204 a Black 0 0 0 TeXcolorrgb
Fb(Mo)r(de)h(n)n(um)n(b)r(er)p Black Black -1105 1204
a
  } 10/Place PSfrag
 -1105 1204 a -706 1304 a
  {
 -706 1304 a Black 0 0 0 TeXcolorrgb
-7 x Fa(\000)p Fb(5)p Black Black -706 1304 a
  } 11/Place PSfrag
 -706 1304
a -706 1404 a
  {
 -706 1404 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(4)p Black Black -706 1404 a
  } 12/Place PSfrag
 -706 1404
a -706 1503 a
  {
 -706 1503 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(3)p Black Black -706 1503 a
  } 13/Place PSfrag
 -706 1503
a -706 1603 a
  {
 -706 1603 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(2)p Black Black -706 1603 a
  } 14/Place PSfrag
 -706 1603
a -706 1703 a
  {
 -706 1703 a Black 0 0 0 TeXcolorrgb -7
x Fa(\000)p Fb(1)p Black Black -706 1703 a
  } 15/Place PSfrag
 -706 1703
a -642 1802 a
  {
 -642 1802 a Black 0 0 0 TeXcolorrgb Fb(0)p
Black Black -642 1802 a
  } 16/Place PSfrag
 -642 1802 a -1243 1902 a
  {
 -1243
1902 a Black 0 0 0 TeXcolorrgb -21 x Fb(Relativ)n(e)g(error)f([\045])p
Black Black -1243 1902 a
  } 17/Place PSfrag
 -1243 1902 a -948 2001 a
  {
 -948
2001 a Black 0 0 0 TeXcolorrgb Fb(10)h(Blo)r(c)n(ks)p
Black Black -948 2001 a
  } 18/Place PSfrag
 -948 2001 a -948 2101 a
  {
 -948
2101 a Black 0 0 0 TeXcolorrgb Fb(25)g(Blo)r(c)n(ks)p
Black Black -948 2101 a
  } 19/Place PSfrag
 -948 2101 a -948 2201 a
  {
 -948
2201 a Black 0 0 0 TeXcolorrgb Fb(50)g(Blo)r(c)n(ks)p
Black Black -948 2201 a
  } 20/Place PSfrag
 -948 2201 a -989 2300 a
  {
 -989
2300 a Black 0 0 0 TeXcolorrgb Fb(100)f(Blo)r(c)n(ks)p
Black Black -989 2300 a
  } 21/Place PSfrag
 -989 2300 a -989 2400 a
  {
 -989
2400 a Black 0 0 0 TeXcolorrgb Fb(200)g(Blo)r(c)n(ks)p
Black Black -989 2400 a
  } 22/Place PSfrag
 -989 2400 a 2400 2400 a
 currentpoint grestore moveto
 2400
2400 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
